/**
* Manually generate UNIQUEID() key values. The following spreadsheet formula, 
* suitable for Microsoft Excel and Google Sheets, will generate a unique ID 
* consistent with those generated by AppSheet's UNIQUEID() function
* @param {string} prefix Prefix for unique ID (default blank)
* @return Unique ID
* @customfunction
* https://support.google.com/appsheet/answer/10105828?hl=en
*/
function uniqueID(prefix = "") {
  //let id = prefix + "-" + DEC2HEX(RANDBETWEEN(0, 4294967295), 8);
  let randomNumber = Math.floor(Math.random() * (4294967295+1));
  let id = randomNumber.toString(16);
  while (id.length < 8) {
    id = "0" + id;
  }
  if (prefix != "") id = prefix + "-" + id;
  return id;
}


function setUiMenu() {
  //SpreadsheetApp.getUi().createMenu('My Addon').addItem('Enable','doNothing').addItem('Hello','HelloWorld').addToUi();  
  SpreadsheetApp.getUi().createAddonMenu()
    .addItem('Hello World','HelloWorld')
    .addItem('Do Nothing','doNothing')
    .addToUi();  
}

 /**
   * Validate if the provided object is a valid Google Sheet.
   * @param {Object} sheet - The object to validate.
   * @returns {boolean} True if the object is a valid Sheet, false otherwise.
   */
function isValidSheet(sheet) {
  return sheet &&
          typeof sheet.getName === 'function' &&
          typeof sheet.getLastRow === 'function' &&
          typeof sheet.getLastColumn === 'function';
}

/**
   * Validate if the provided object is a valid Google Spreadsheet.
   * @param {Object} spreadsheet - The object to validate.
   * @returns {boolean} True if the object is a valid Spreadsheet, false otherwise.
   */
function isValidSpreadsheet(spreadsheet) {
  return spreadsheet &&
          typeof spreadsheet.getName === 'function' &&
          typeof spreadsheet.getId === 'function' &&
          typeof spreadsheet.getSheets === 'function';
}